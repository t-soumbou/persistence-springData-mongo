
/*
 * Created on 2017-03-29 ( Date ISO 2017-03-29 - Time 11:30:14 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
 */
package org.demo.persistence.impl.springMongo;

import java.util.List;


import javax.inject.Named;
import org.springframework.data.mongodb.core.convert.MongoConverter;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.mongodb.core.query.Update;
import org.demo.data.record.WorkgroupRecord;
import org.demo.persistence.WorkgroupPersistence;
import org.demo.persistence.impl.springMongo.commons.GenericSpringDataMongoDb;

/**
 * Workgroup persistence service - SpringMongo implementation 
 * 
 * @author Telosys
 *
 */
@Named("WorkgroupPersistence")
public class WorkgroupPersistenceSpringMongo extends GenericSpringDataMongoDb<WorkgroupRecord> implements WorkgroupPersistence {

	/**
	 * Constructor
	 */
	public WorkgroupPersistenceSpringMongo() {
		super("workgroup", WorkgroupRecord.class);
	}

	/**
	 * Creates a new bean instance and set its primary key value(s)
	 * 
	 * @param id
	 * @return the new instance
	 */
	private WorkgroupRecord newInstanceWithPrimaryKey(Short id) {
		WorkgroupRecord record = new WorkgroupRecord();
        record.setId(id); 
		return record;
	}

	//-------------------------------------------------------------------------------------
	// Generic DAO abstract methods implementations
	//-------------------------------------------------------------------------------------
	@Override
	protected void setAutoIncrementedKey(WorkgroupRecord record, long value) {
		throw new IllegalStateException("Unexpected call to method 'setAutoIncrementedKey'");
	}

	@Override
	protected Update updateQuery(WorkgroupRecord record) {
		Update update = new Update();
		update.set("name", record.getName());
		update.set("description", record.getDescription());
		update.set("creationDate", record.getCreationDate());
		return update;
	}

	@Override
	protected Query queryForIdentifyBean(WorkgroupRecord record, MongoConverter converter) {
		Object keyid = converter.convertToMongoType(record.getId());
		Query query = new Query(Criteria.where("id").is(keyid));
	    return query;
	}
	//-------------------------------------------------------------------------------------
	// Persistence interface implementations
	//-------------------------------------------------------------------------------------
	@Override
	public long countAll() {
		return super.doCountAll();
	}
	
	@Override
	public WorkgroupRecord create(WorkgroupRecord record) {
		super.doInsert(record);
		return record;
	}

	@Override
	public boolean delete(WorkgroupRecord record) {
		if(super.doExists(record))
			return super.doDelete(record);
		return false;
	}

	@Override
	public boolean deleteById(Short id) {
		WorkgroupRecord record = newInstanceWithPrimaryKey(id);
		if(super.doExists(record))
			return super.doDelete(record);
		return false;
	}

	@Override
	public boolean exists(WorkgroupRecord record) {
		return super.doExists(record);
	}

	@Override
	public boolean exists(Short id) {
		WorkgroupRecord record = newInstanceWithPrimaryKey(id);
		return super.doExists(record);
	}

	@Override
	public List<WorkgroupRecord> findAll() {
		return super.doSelectAll();
	}

	@Override
	public WorkgroupRecord findById(Short id) {
        WorkgroupRecord record = newInstanceWithPrimaryKey(id);
		return super.doSelect(record);
	}

	@Override
	public WorkgroupRecord save(WorkgroupRecord record) {
		if (super.doExists(record)) {
			super.doUpdate(record);
		} else {
			super.doInsert(record);
		}
        return record;
	}

	@Override
	public boolean update(WorkgroupRecord record) {
		return super.doUpdate(record);	
	}
}
